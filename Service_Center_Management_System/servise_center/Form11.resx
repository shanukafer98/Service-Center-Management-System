<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAREAAAC4CAMAAADzLiguAAAABGdBTUEAALGPC/xhBQAAAJNQTFRFHWaO
        ////7u7u7e3t9/f37Ozs+/v78fHx9fX1+fn5GGSNAF2IAFuHAFiF9/Xz9PLxNnWZxdTeuMjSLnCVV4el
        2eDkAFWDqL/O5Ofp6fD0nrXEJ22TAGGLAFOD2uXrtsTPdpixydfgkqy+aZGrS3ychaW7XYmm1NzhmLHC
        2ePqpbrJcZixhqa7tsPOTn+ftsrXAEt+wE4PowAAFdRJREFUeF7tXQ1X6roShYqtJGkrKFKkRwFFFL36
        /v+ve5OkLc3HJKFQ73Ud91p3XfZpZpJu22QmTdPBUGB0EQEufkkU/SqikV9FdPKriE5+FdHJQRGOy19y
        cTEY/ULFQAozkjJd/pLhQNw7NZO31d9NfhXRya8iOvlVRCeyZ72smOhi/CTKk+hYm3+JRHmejGuCF2uR
        Oh6R/xhAQI3derJeDIfjYJt/i0Do9TCZf62LPAm3OTJmjbL1qmSMsnT58ZCjxf4bJNtty5RSxtLPfZIH
        Ojgyio9nL2k5kKBsdQmaeG3+LZJE26athC2neXMEt+E4TpFJWdfBQZe73G/zL5F8dk2rdnKQdFUfwW04
        OU6RCav8VyB0EnoxfjdJZgNStbICe5JHPA6OyvTeNEFAknIXiVJhDr6TXGuCwCX9Lo8oxQxyTKaXLI1K
        BuRmXB39b2G4at8yFdh9XB12ITzTy7ftPqQG3eRqsf8EiXbG5QwgbNfEYbiD8Jh1ZlEdkBYOm3+LZC/m
        5QwgL5nfQbAi+YftEhkMyi0PSwIcfCdB/noDuEi8DsIVWVZedZRJmINvJPkeUaRc5V4HoYrY70wONgFJ
        /A6+k2RP1psGsAy4RkSnUjO8v0kw2au+1evgG0mUmENvBbZrp31WB3U8Iv6xHphtBOlG4EqUw7zXwTeS
        uGqaCfYVexyEZ3orTBHy2S4m0J1AvBcvFqOrXHTX7SPHkHGJXSPlfexxEB7F44rctIsJdCVJPtleszRN
        B7f3Rdbdm0ORj+9Q5LldTKAjydafaXUuhNJtEZitmiTGxsWzKmKNWDnIS7uYQCcSZa+s9acllEyrI8d7
        e8auEboJV4Sj7mJsxDHWtIsJdCL5Rh/f03t5RCkWRN6xPx+dx61iNgdNpjcWwMlYnwloQKeipCwlLDqR
        eG5WkL4O+aF2sSAynmN/PraWpRwOQuORi0u0kiJCbI4hUWH7s7JHiHWO9xYVWGNJ4XUQHMVjcSBkT2EO
        3CSz99x0lnTyZs/0eGO9DsLzmklauVWRTs+S6RXUeg5B2apJkrX9HmfTxOsgWJEot3bg5JNfIkEOXATN
        zSBr6uJ6+GS75MhzfsbcN0qsud7dgpcKcuAi2GU+KAOucwsZX1m7pUnudxCuSJQZwyPcM3O3TTC5qRzq
        ILTuC490vW4HNxLsA+Jgr4M6HhHdbT0wY2SlS8K2mc8mjIyxwWFAvbmZnWR7vbFUTMb7HBz5TG+r1ELY
        5oTkQyFX9m4bUG59USZCske1s05Fju51EB7FS+zL5o9J6HIKvarXJojgipDb6qIWJse4znefaaMJLWUA
        7HVwpCKjvNgOGC3LkqY3r/whZ4BNCBnhijx3VYSn0reMUWguGwTnjccqAhfj5eR1u9rO34YxPxBk4yf4
        HA+5GfFSXV0vJvebzf0E/niBNuGZnsAYzEF6SQJtwsgnMvqKa+RQrFM9cS4mxyXx2VwMrgSqLMdBxnGc
        FA+LeBg7i3UkMT7Z8Dk8FOtWzxj6qeKhSKDpATahmV4+WV0TuCUHL/OR/KP5bY4gCZpal6v4UKyT63y3
        uR6U0JvcrKZ5HQHjNoER2uSGlQQubAJDDPuQXarP5iiS3CC3DX2sFOnoOps8MzkME1Kym2oWymETpsjT
        YRgDz5RM+LDrsTmO5Pf2GI2UHWPWimQf7aYPSBWVOGxCFBlf6zd5Og+Jh48h0ciy8gBQvnfKa2qSPRmR
        q3h04LAJUeTZ7PXS105ZuoPEa2tIQmf+bBUnuZF3gEdxleA2UhGlVp1sbddzulf+dk4HgWRjqYcnZye4
        ntpUTr/0Ygqp4xHR3dYDc5uMscmXSbcMDCUX+ZMhSXlrFDuG5PY7EcZX3Maf6Q2xp8p0x0ccR/R3NMnf
        tQxe3vMdvUFvbZnM5qB7x+o5fxS/wJ6PkaVcSyOL4Q6OINk9BDwNSNqspUvyvMPjrAx5bEOeT1IEDZ3g
        kj5fpleRfLaC4AEAoy67eZRHxnm0m79uP/aTq+O8zbCmp0WzntBw4FcEiRM4+PQI3h5JFpurY26uaLiY
        vyzLkly/T5NEHpm8LyGBpSVl9OlhKEoFecvRpzZ0Wrm2taBRhKPuYtoETTgAbJ1YbVpklS4fs9aq9MMR
        B4EMKoHsTJA5RMtVdfzCeYUkNtAbtk4MFNngyao304uxKWEOyNRdORP82KUDwj53kKxpR8JIPF2qE2GE
        fYjETy1mJ0O06eVqeCim2AA8mR7yTKIG3bpypssoF0k+Ydtxp+wwXykhuEA64UeCHKBNB0VwB96YFV14
        IJC+2Wxqkk+rvq1kc7lGBq/HRt4tXSMR93mQAyx55IrgDnyKFOjiFAGydPi+yA9tYstpljjqsZG5Pa7n
        axGCHPSjCDqCVaAQZus2NVHyWcJuZ2pEjlcqycI+90rYItBBL4rgMzk10jV6O2iP+6E7KY6Z63hBhgq+
        FDDIwSmK1H87g+SPeDgiQZYRn8W0OTAGbkrm8ohSDCFv6PT8XRWVeBzgipBbh4M6HhHdbT0wtwga5TQo
        5aorw0E0s5wSu55CQGGpxyDok2B+QnU44XJwkeGKfOIOvJmeLUXXwGAItjiwnxJhT7OQt5QSbGk7hxyB
        3Q6gAY5rBM+SvFE8uqKrBbqyOMixHqi8m+FZRUNy15+CXNfFcAe9KeIKWRvQ2yvjcVaGrcQunwKukShH
        F3JzVBeJwwFvQT+KOEPWBiXZJ2oijM1N8OUPtno0Eu2cd6tcVexyAORURTjqLqZF3CHrAXR5X2R563ao
        /t0Af7HAUo9G8nv33cr4zKDLAfwM6Vl1G4An04sCuhEJQunnZlrE8XgEDoavf5CFZcvaNV4pEN/dCm4M
        G504R99DMcUG4M70rCMoCkjWKXnZTITmi3mzpLuN0EStKo6Czww6HQBciuAtcMes2Jo/Bwhl7Hmz5g52
        H6WuiXzRwhExSjIu/PU6HQjiUgRvgVuRfOoPRyzgqjx9DbMs2miSsIfaNV4pkPjLqwi9966y60URdDW8
        F6DK0zTPipe2h5IHc9I1XimQGJ3+auGyjrsxb70o8ooromwhYAVhN/tMWeFYQtpaucYrBTK8xU7mABi0
        cAeCnKKINeWBXxk+y1puV+b6SB2E3UatRIC+VrmvXo9Oxs74rEa9h4q0MYlLkVYxzUEdj4juth6YDwQP
        4ul8OHn231P0adhMTELwjdWjkQVfmeEDfZWDBOYtJB4xHfgyPTwsYF9xkuyXXk3YNKu7ZzZB69FIwFAD
        INwC99ZPFI8H8extDLH6xYZ4NCGfWSIDX/6yFlaPRsIG/bKav5M2hrd+FMGDeLYARaDvLV4PS1ytIEUm
        7z0+G4jVo5Ev/+3IQZzPWXtRJLaH4gBSSkWiaDi+H7j6WFbIJEWMvEg98/VYdm/iyOLD4a6NcssvEsNb
        RU5VhKPuYhqCL7wdDOKWzRdE7NU/6yBlIeO8ko8z9nre/rDyI6ke1j28s7ArRPgGI91bTUJ6Vt0G4Mz0
        RuhmAWIrlrrY1dU4fvsoD08j24CRLuYT+nTPS1rriflzrrtpDMnZcHKLamsBFU/4VG8NcY6+h2KKDUCN
        0C5VktRPoEyQ53qNkbSBk1nzvbaMYTN9g9uAgoJXWD2ylpTH91/X/hinDUKvwEprdUNcimA2npjVMRNv
        f+PtbfNJGYVcpm4LYVO4WUCRdII+xBArgfhAtLf2R06Jyg/dW4u4FMFsfIrgaQ2yk0eeJev99nYAqR5f
        4UBfZrzYoizF+432enimQAa7DbVWtnTPlLgeZ/WhyAa9p0s0q0j4cqDRYvc13z/OMvEq5qJM8ZfXRuLC
        uEbSJLZ3Tcrz4cZsQU36UATdLIAn43abFmkefi/SDV7MOdtPnvMqmsGQLlDXpyhiTXlgREf3ehnQx1oR
        zcZGFjDyNkQ5AoOLa5auZLs8cT+Mh4uk5U1x7VKkVUxrdR2P2HMmR1rzhtmYJCr2OVIsKhxnS9J3MXvg
        WuYEF8lMODNbEBKPmK32ZHp4Uk4XmI2FALUfyQu8BsKeYeDmxawv0DeQe+SYlfYTxVceTEAQj9kcQfJH
        fGylN491s53P90RPIorp9fSiiKMlMWYjSZ5lmSRD+NUmh2LjGZo2leT+sKNqdFn9qx3VVKXRnD4UcbxP
        eIPZSJJ/DJZ2kF1TLMbmLEu2LWCcOnhzTG4C5EViNOdURTjqLqYmD7gin5iNJNFuvV4/CPBfbQL9V1UM
        mU0l6RPooXhDnxAKlGLrVaM5IT2rbgOoMz1Is8bjWCUjfIEReYHDNpuaxIAruc8J/9kmTbGxtcnseg3m
        qreh+2kFm8liik1QpqfbANQITc1/HGkNBPF2mzaJckBSTza3iSgWLSpnbdABXxBsekPPjqN8OrwAFWID
        iuCtdsWsrrRm43l+tJhMJv88Av6Zwq82aYpZdpKhdMPXGFhcu9fDsZ1t4xaXIvZWczgVwdMa/tjValOT
        yR0teaoHEP+vCaX8MhHFjHWQ0KHGPPC3Nse5bAMuEotND4o40pppwE4e2rDbIqKYtg6SsCdHHju0v7RW
        g9q2GT2/Io60hr8jYLVpE/47iqqtHRUiiinvNkCEKp6e4958F4lp01GRhKNJeRSS4c8a6Q6xqclosUhm
        AsWC40CaYlf3/I3qyt+yepnG7o1j57lIauUPNi5F8HrqeMRMeYCgfxZS8pd/rDaS5Jv//alwV/1f4O7P
        /4pm9ebHYP1a0pLAf69Ddec2m2vr1kQ1ILvRbRzxyEsdj5j1uDM9x5Ir1KYil0VRyJ3XIvjVJodi8yLP
        i/370/scLhynN0GQVeEV6IwvNG7bOBR56hrF4wEaXxlntzmQelGa+K2QqphY33jEC3h4Rw/gMYlq04Mi
        Y2cQb7eRUAaWU4l8UgauF76YRG1OD4rglynhb1labLKX67NDvjIq6nGus5EXyfkUMbuYS8tXFWqIhwIW
        m2zAX8Q8L9Idz/pEPSNnCsz3x283J0QR8xQOmZ5Mx9pkhD+/opux1WZ4VxU4I9hkKHxDJWPn1BEMN7JY
        1Rx89IVk+VBMsQE4Mj18+28exFtt8C2ruoOKxbyynkvsHAX4s5t2c1yKKGeqEEfM6kpr+DshFht8QqU7
        aLVtF6/HPXUk5klazUHDqYA3jqyH7J/eEOD9us0Gf3LeHcr6xgjZG0GA/FETI3y3qI55TY4HiXRmt/Ev
        Qz0eYlwDiHrQFxAAJWm20ZDNQdOyIxRRbqj8BZ0pL6GgzcbxSn1nVMukZT34KkZInfk6gXZzXrG/KLhU
        RFBOW2Z69Q5QIuWpCfxCb9vMbhOyMPdYkBs58SbriZGpo3JQ7dnUag46gQCjknKmCnHFIxAu2s+QIq/m
        5fj0wQkgYiPpup7E2l+Sp7G5QUx+fWdrP4Q46zqpMGx8z/TESgYNhA5exNSgaZOhfdkpYMr6O/sqHzq3
        nsJC3SxUgJS3ru+ZuTM9SCWMZ0yEztHX7LLQ95OOAlsrCYtVdkSR4dCMIJYF/4amVuxAfIqY+SadZ6i7
        rIeOFWqUe2vX9VjfcEEVMXKzcuVa3wjwKWJUzy5wd+g27SeBB8jtemyvzaKKDHVF6Fz1phNnpid+a4oQ
        ArG0OGLa4N9BOgn8SUi7Hls1XBH7KeiKsEm7nzZtXJme+B3pXQOzFpOkJ0W2ItU71GNZlkTvR/ZTMHaC
        SIvqiFKsRRwRmiCXuiJ8laVZTJI+Qla4LGXQ2qrHnLgpm0VgWttMRUQch56CM4oXxFAEknM0BO7+xpYL
        lnf7jIzroIjWNlMRuakTdgoBilSOGjCIDTF3AZsMdED1unO7UmO+8zsVMa4RhyLOqeHuKMWjGKVSfWaq
        N0XMu8v4EBtXBLsJA96u6wJ56yuV4opobcMUwU4BFBFJTp3lWIihCPQj8ohpg05anQYmVui16rEpUj/l
        VIoliamIeKiIngIoIv+HDOYAXRE6TbDBPHcuPO0OqFJrW2bGXcgpGMMSm/nikYrJW8lCTEXQNMm9yrI7
        RNCqVGpVxHoKpiKe/TG9UfwRiiTuHTK6A4JWrW0/RZHjNxkIQ7n6oYr498XqCPGpLaXS71DE2i1xhPes
        vl1UOoPvMKu2rdeeVSQ5SZXlJAa5MhSZDC3FOOkpZOVBq1IPwBh9KYy+4ojeNuNd6nRRHVGKtYgvQot0
        RdgaDW/c7zh0BxGr+ZRK+4zQOGmYvK3axIzQQBGzmCA9haxV0KpU+m1RvFnuGEX0omeD2MdFqfSHKFKV
        OD945qBW+m2KmHfXEf0I/p3hUyGWByiV9tmP1FkO72ablKdFDEVamZ5iw9/q7Ql8KaNaqanIlf0UTEUW
        /JD9FDiJzxePRH2FrHC+q8OucqLSXuORislbyUJMRZCYteO+WCHgQatS6c+I4rFv8pwB5Fl7CvdDFMGX
        JJ2Mpda2H6JIT7OsHFRr23coYu2WOIJ71ry3kFV0h0qlvfas1cgjBp7YILmR6fHFlKKUbmNod0awnVqp
        Mfoenum1i0EKZxl95RGlWJucMULrZamEBA+ClEr7jNA4aZi8rdokPIofVwX6AH3UKv22KN4sF65IfyGr
        CFrVSn+EIn2s7q1h7LvybYqYd1d4P+J+//Q08OUBSqV99iNKP2shhiLIWBPw9YHuIM9NeinqNBShkOmJ
        I1rbcpsi4ohSrE3OFo94tsQ4FWqlvcYjFZO3koWYithj1j5DVv6XVSr9EVF87tnP/DTAX7aqR1T6IxTB
        Pud3HrBmlbKo9EcoktxUBXoB9F5VPaLS71DE2i1xhPasBd8mT+yTR8Wv85I/97UiotITelaxXaf1TCXx
        ZXqW0XdtH31HYk+NqYD4eV7yoI6++otHaKZXaIqQMpFHlGJt4ovQjO/p8QU/eHjDPyna7LtyXqLUow9s
        dI9EaBeGIvIQfgq+KN5Yl8+fJpnFrCRvvcYcagPkYMPXa9uL6S9QsAnEiAK6N/2RyVIKrBc7EK8i+isz
        DDzi7hqyeP78fJbYq0e8BEw+BZ5fxRJ2WzH9gz+kqLeG0Lzpdz2PfuURpViL+BTRd+4RHnF3DVmIj9Jy
        MP5FwCCbipSVIaEfqCKR+n4V3WKfLdf3qVTeg7TaeDO9Qn3DRrxrit+EDVk0DeGZfPuIlzTbAJeKImqx
        /L4lCRlAh2H3lmifChcPTMURpViLeMeaYfu7EVA3PyiP4DZAFqkcOilNN57USifVoAuWW/46IFIs2zdf
        MSXl7gr1NlI/BXIrDxjFDsQbj4zybf1lHv5d5p2+kNJOouL1/nUucD91BwAGAZv9PcfrWjuikjf+ySBC
        yvRZLFHFisUvh/ant+MxUqwm/kxvFGW7j9slu7srr1fTXNvRAicwbkoS6zulBJCYD7v+nUl2m5fb21X1
        EidebL16HqRpSp63IDFeTBJ/FA8kybP67PgBh7tvJmM+vrc/R+YoVp+Cz3WQIn8V+VVEJ/5M728j/kzv
        ryO+CO3vI74o/u8jv4ro5FcRnfz2Izr5HWt08huPaCQg0/u7SBT9H63sTk/wqEVbAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>